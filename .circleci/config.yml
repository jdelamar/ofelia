# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
# Jobs

jobs:
  build:
    docker:
      - image: gcr.io/npav-172917/docker-go-sdk:0.40.0-alpine
        auth:
          username: ${GCR_DOCKER_RO_USERNAME}
          password: ${GCR_DOCKER_RO_PASSWORD}

    steps:
      - checkout 

      - setup_remote_docker


      - run:
          name: Run Tests
          command: make test

      - run:
          name: Building the binaries
          command: make 

  release:
    docker:
      - image: gcr.io/npav-172917/docker-go-sdk:0.40.0-alpine
        auth:
          username: ${GCR_DOCKER_RO_USERNAME}
          password: ${GCR_DOCKER_RO_PASSWORD}


    steps:
      - checkout 

      - setup_remote_docker

      - run:
          name: unpacking service account
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 -d  > ${HOME}/gcloud-service-key.json

      - run:
          name: Login into docker repository
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] && [ "${CIRCLE_PROJECT_USERNAME}" == "Accedian" ]; then
              docker login -u _json_key -p "$(echo $GCR_DOCKER_RW_PASSWORD)" https://gcr.io
            fi

      - run:
          name: "Push image to GCR"
          command: |
            # Only push docker image when on master branch on the Accedian project
            if [[ "${CIRCLE_BRANCH}" == "master" || "${CIRCLE_BRANCH}" == "release/"* ]] && [ "${CIRCLE_PROJECT_USERNAME}" == "Accedian" ]; then
               echo "Now Tagging"
               git config --global user.email "${CIRCLE_USERNAME}@accedian.com"
               git config --global user.name "CircleCI"
               git semver minor
               export DOCKER_VER=$(git semver get)
               git push origin master ${DOCKER_VER}
               export GOPATH=/root/go
               make -f Makefile.Accedian circleci-push
            fi

workflows:
  version: 2
  build_and_release:
    jobs:
      - build:
          context: org-global

      - release:
          context: org-global
          requires:
            - build  
          filters:
            branches:
              only: 
                - master
                - /release\/.*/
